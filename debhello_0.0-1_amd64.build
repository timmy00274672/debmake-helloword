 dpkg-buildpackage -rfakeroot -D -us -uc -i -I
dpkg-buildpackage: source package debhello
dpkg-buildpackage: source version 0.0-1
dpkg-buildpackage: source distribution UNRELEASED
dpkg-buildpackage: source changed by Tim Chen <timchen@ingrasys.com>
 dpkg-source -i -I --before-build debhello-0.0
dpkg-buildpackage: host architecture amd64
 fakeroot debian/rules clean
dh clean  
   dh_testdir
   dh_auto_clean
	make -j1 distclean
make[1]: Entering directory '/home/bmc/workspace/debmake-doc/debhello-0.0'
rm -f src/hello
make[1]: Leaving directory '/home/bmc/workspace/debmake-doc/debhello-0.0'
   dh_clean
	rm -f debian/debhelper-build-stamp
	rm -f debian/debhello.substvars
	rm -f debian/debhello.*.debhelper
	rm -rf debian/debhello/
	rm -rf debian/.debhelper/
	rm -f debian/*.debhelper.log
	rm -f debian/files
	find .  \( \( \
		\( -path .\*/.git -o -path .\*/.svn -o -path .\*/.bzr -o -path .\*/.hg -o -path .\*/CVS \) -prune -o -type f -a \
	        \( -name '#*#' -o -name '.*~' -o -name '*~' -o -name DEADJOE \
		 -o -name '*.orig' -o -name '*.rej' -o -name '*.bak' \
		 -o -name '.*.orig' -o -name .*.rej -o -name '.SUMS' \
		 -o -name TAGS -o \( -path '*/.deps/*' -a -name '*.P' \) \
		\) -exec rm -f {} + \) -o \
		\( -type d -a -name autom4te.cache -prune -exec rm -rf {} + \) \)
	rm -f *-stamp
 dpkg-source -i -I -b debhello-0.0
dpkg-source: info: using source format '3.0 (quilt)'
dpkg-source: info: building debhello using existing ./debhello_0.0.orig.tar.gz
dpkg-source: info: building debhello in debhello_0.0-1.debian.tar.xz
dpkg-source: info: building debhello in debhello_0.0-1.dsc
 debian/rules build
dh build  
   dh_testdir
   dh_update_autotools_config
   dh_auto_configure
   dh_auto_build
	make -j1
make[1]: Entering directory '/home/bmc/workspace/debmake-doc/debhello-0.0'
# CFLAGS=-g -O2 -fPIE -fstack-protector-strong -Wformat 
# -Werror=format-security -Wall -pedantic
cc -Wdate-time -D_FORTIFY_SOURCE=2 -g -O2 -fPIE -fstack-protector-strong -Wformat -Werror=format-security -Wall -pedantic  -o src/hello src/hello.c
make[1]: Leaving directory '/home/bmc/workspace/debmake-doc/debhello-0.0'
   dh_auto_test
 fakeroot debian/rules binary
dh binary  
   dh_testroot
   dh_prep
	rm -f debian/debhello.substvars
	rm -f debian/debhello.*.debhelper
	rm -rf debian/debhello/
   debian/rules override_dh_auto_install
make[1]: Entering directory '/home/bmc/workspace/debmake-doc/debhello-0.0'
dh_auto_install -- prefix=/usr
	install -d debian/debhello
	make -j1 install DESTDIR=/home/bmc/workspace/debmake-doc/debhello-0.0/debian/debhello AM_UPDATE_INFO_DIR=no prefix=/usr
make[2]: Entering directory '/home/bmc/workspace/debmake-doc/debhello-0.0'
install -D src/hello \
	/home/bmc/workspace/debmake-doc/debhello-0.0/debian/debhello/usr/bin/hello
make[2]: Leaving directory '/home/bmc/workspace/debmake-doc/debhello-0.0'
make[1]: Leaving directory '/home/bmc/workspace/debmake-doc/debhello-0.0'
   dh_installdocs
	install -d debian/debhello/usr/share/doc/debhello
	install -p -m0644 debian/README.Debian debian/debhello/usr/share/doc/debhello/README.Debian
	install -p -m0644 debian/copyright debian/debhello/usr/share/doc/debhello/copyright
   dh_installchangelogs
	install -p -m0644 debian/changelog debian/debhello/usr/share/doc/debhello/changelog.Debian
   dh_perl
   dh_link
   dh_strip_nondeterminism
   dh_compress
	cd debian/debhello
	chmod a-x usr/share/doc/debhello/changelog.Debian
	gzip -9nf usr/share/doc/debhello/changelog.Debian
	cd '/home/bmc/workspace/debmake-doc/debhello-0.0'
   dh_fixperms
	find debian/debhello  -print0 2>/dev/null | xargs -0r chown --no-dereference 0:0
	find debian/debhello ! -type l  -print0 2>/dev/null | xargs -0r chmod go=rX,u+rw,a-s
	find debian/debhello/usr/share/doc -type f  ! -regex 'debian/debhello/usr/share/doc/[^/]*/examples/.*' -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/debhello/usr/share/doc -type d  -print0 2>/dev/null | xargs -0r chmod 0755
	find debian/debhello/usr/share/man debian/debhello/usr/man/ debian/debhello/usr/X11*/man/ -type f  -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/debhello/usr/include -type f  -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/debhello/usr/share/applications -type f  -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/debhello/usr/lib/x86_64-linux-gnu/perl5/5.22 debian/debhello/usr/share/perl5 -type f -perm -5 -name '*.pm'  -print0 2>/dev/null | xargs -0r chmod a-X
	find debian/debhello -perm -5 -type f \( -name '*.so.*' -o -name '*.so' -o -name '*.la' -o -name '*.a' -o -name '*.js' -o -name '*.css' -o -name '*.jpeg' -o -name '*.jpg' -o -name '*.png' -o -name '*.gif' -o -name '*.cmxs' \)  -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/debhello/usr/bin -type f  -print0 2>/dev/null | xargs -0r chmod a+x
	find debian/debhello/usr/lib -type f -name '*.ali'  -print0 2>/dev/null | xargs -0r chmod uga-w
   dh_strip
	strip --remove-section=.comment --remove-section=.note debian/debhello/usr/bin/hello
   dh_makeshlibs
	rm -f debian/debhello/DEBIAN/shlibs
   dh_shlibdeps
	install -d debian/debhello/DEBIAN
	dpkg-shlibdeps -Tdebian/debhello.substvars debian/debhello/usr/bin/hello
   dh_installdeb
   dh_gencontrol
	echo misc:Depends= >> debian/debhello.substvars
	echo misc:Pre-Depends= >> debian/debhello.substvars
	dpkg-gencontrol -pdebhello -ldebian/changelog -Tdebian/debhello.substvars -Pdebian/debhello
	chmod 0644 debian/debhello/DEBIAN/control
	chown 0:0 debian/debhello/DEBIAN/control
   dh_md5sums
	(cd debian/debhello >/dev/null ; find . -type f  ! -regex './DEBIAN/.*' -printf '%P\0' | LC_ALL=C sort -z | xargs -r0 md5sum > DEBIAN/md5sums) >/dev/null
	chmod 0644 debian/debhello/DEBIAN/md5sums
	chown 0:0 debian/debhello/DEBIAN/md5sums
   dh_builddeb
	dpkg-deb --build debian/debhello ..
dpkg-deb: building package 'debhello' in '../debhello_0.0-1_amd64.deb'.
 dpkg-genchanges  >../debhello_0.0-1_amd64.changes
dpkg-genchanges: including full source code in upload
 dpkg-source -i -I --after-build debhello-0.0
dpkg-buildpackage: full upload (original source is included)
Now running lintian...
W: debhello source: package-file-is-executable debian/control
N: 
N:    The packaging file is marked executable. For control, changelog and
N:    copyright there is no reason for them to be executable.
N:    
N:    This tag is also emitted if a debhelper file is marked executable
N:    without using compat level 9, since debhelper does not execute them at
N:    lower compat levels.
N:    
N:    Severity: normal, Certainty: certain
N:    
N:    Check: debhelper, Type: source
N: 
W: debhello source: package-file-is-executable debian/copyright
W: debhello source: out-of-date-standards-version 3.9.6 (current is 3.9.7)
N: 
N:    The source package refers to a Standards-Version older than the one that
N:    was current at the time the package was created (according to the
N:    timestamp of the latest debian/changelog entry). Please consider
N:    updating the package to current Policy and setting this control field
N:    appropriately.
N:    
N:    If the package is already compliant with the current standards, you
N:    don't have to re-upload the package just to adjust the Standards-Version
N:    control field. However, please remember to update this field next time
N:    you upload the package.
N:    
N:    See /usr/share/doc/debian-policy/upgrading-checklist.txt.gz in the
N:    debian-policy package for a summary of changes in newer versions of
N:    Policy.
N:    
N:    Refer to https://www.debian.org/doc/debian-policy/upgrading-checklist
N:    for details.
N:    
N:    Severity: normal, Certainty: certain
N:    
N:    Check: standards-version, Type: source
N: 
I: debhello: hardening-no-pie usr/bin/hello
N: 
N:    This package provides an ELF executable that was not compiled as a
N:    position independent executable (PIE).
N:    
N:    PIE is required for fully enabling Address Space Layout Randomization
N:    (ASLR), which makes "Return-oriented" attacks more difficult.
N:    
N:    Historically, PIE has been associated with noticeable performance
N:    overhead on i386. However, GCC-5 has implemented an optimization that
N:    can reduce the overhead significantly.
N:    
N:    If you use dpkg-buildflags, you may have to add hardening=+pie or
N:    hardening=+all to DEB_BUILD_MAINT_OPTIONS.
N:    
N:    The relevant compiler flags must be passed both to the compiler and the
N:    linker (e.g. for C that would be commonly be CFLAGS and LDFLAGS).
N:    
N:    CAVEAT: Please keep in mind that the PIE flag (-fPIE) is not suitable
N:    for all cases:
N:    
N:     * It is <not> compatible with -fPIC which required for
N:       compiling shared libraries.
N:     * It is unlikely to work when compiling static libraries or
N:       executables (gcc -static).
N:    
N:    If your upstream build compiles either of the above, you may have to
N:    patch the build to ensure that only ELF executables are compiled with
N:    PIE.
N:    
N:    Refer to https://wiki.debian.org/Hardening,
N:    https://gcc.gnu.org/gcc-5/changes.html, and
N:    https://software.intel.com/en-us/blogs/2014/12/26/new-optimizations-for-x86-in-upcoming-gcc-50-32bit-pic-mode
N:    for details.
N:    
N:    Severity: wishlist, Certainty: certain
N:    
N:    Check: binaries, Type: binary, udeb
N: 
I: debhello: hardening-no-bindnow usr/bin/hello
N: 
N:    This package provides an ELF binary that lacks the "bindnow" linker
N:    flag.
N:    
N:    If the ELF binary does not rely on late binding of symbols (e.g. weak
N:    symbols), then please consider enabling this feature. Otherwise, please
N:    consider overriding the tag (possibly with a comment about why).
N:    
N:    If you use dpkg-buildflags, you may have to add hardening=+bindnow or
N:    hardening=+all to DEB_BUILD_MAINT_OPTIONS.
N:    
N:    The relevant compiler flags are set in LDFLAGS.
N:    
N:    Refer to https://wiki.debian.org/Hardening for details.
N:    
N:    Severity: wishlist, Certainty: certain
N:    
N:    Check: binaries, Type: binary, udeb
N: 
W: debhello: wrong-bug-number-in-closes l3:#nnnn
N: 
N:    Bug numbers can only contain digits.
N:    
N:    Refer to Debian Policy Manual section 4.4 (Debian changelog:
N:    debian/changelog) for details.
N:    
N:    Severity: normal, Certainty: certain
N:    
N:    Check: changelog-file, Type: binary
N: 
W: debhello: new-package-should-close-itp-bug
N: 
N:    This package appears to be the first packaging of a new upstream
N:    software package (there is only one changelog entry and the Debian
N:    revision is 1), but it does not close any bugs. The initial upload of a
N:    new package should close the corresponding ITP bug for that package.
N:    
N:    This warning can be ignored if the package is not intended for Debian or
N:    if it is a split of an existing Debian package.
N:    
N:    Refer to Debian Developer's Reference section 5.1 (New packages) for
N:    details.
N:    
N:    Severity: normal, Certainty: certain
N:    
N:    Check: changelog-file, Type: binary
N: 
E: debhello: changelog-is-dh_make-template
N: 
N:    The changelog file has an instruction left by dh_make, which has not
N:    been removed. Example:
N:    
N:      * Initial release (Closes: #nnnn)  <nnnn is the bug number of your ITP%gt;
N:    
N:    The "<... is the bug number ...>" part has not been removed from the
N:    changelog.
N:    
N:    Severity: important, Certainty: certain
N:    
N:    Check: changelog-file, Type: binary
N: 
E: debhello: extended-description-is-empty
N: 
N:    The extended description (the lines after the first line of the
N:    "Description:" field) is empty.
N:    
N:    Refer to Debian Policy Manual section 3.4 (The description of a package)
N:    for details.
N:    
N:    Severity: serious, Certainty: certain
N:    
N:    Check: description, Type: binary, udeb
N: 
W: debhello: binary-without-manpage usr/bin/hello
N: 
N:    Each binary in /usr/bin, /usr/sbin, /bin, /sbin or /usr/games should
N:    have a manual page
N:    
N:    Note that though the man program has the capability to check for several
N:    program names in the NAMES section, each of these programs should have
N:    its own manual page (a symbolic link to the appropriate manual page is
N:    sufficient) because other manual page viewers such as xman or tkman
N:    don't support this.
N:    
N:    If the name of the man page differs from the binary by case, man may be
N:    able to find it anyway; however, it is still best practice to make the
N:    case of the man page match the case of the binary.
N:    
N:    If the man pages are provided by another package on which this package
N:    depends, lintian may not be able to determine that man pages are
N:    available. In this case, after confirming that all binaries do have man
N:    pages after this package and its dependencies are installed, please add
N:    a lintian override.
N:    
N:    Refer to Debian Policy Manual section 12.1 (Manual pages) for details.
N:    
N:    Severity: normal, Certainty: possible
N:    
N:    Check: manpages, Type: binary
N: 
Finished running lintian.
